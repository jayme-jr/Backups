# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "purple", "R$2000,00~R$4000,00" = "blue",
"R$4000,00~R$6000,00" = "green", ">R$6000,00" = "yellow")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>% mutate(x = "") %>%
select(x, salar) %>%
count(salar, x) %>%
ggplot(aes(x = x, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "purple", "R$2000,00~R$4000,00" = "blue",
"R$4000,00~R$6000,00" = "green", ">R$6000,00" = "yellow", NA = "red")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>% mutate(x = "") %>% mutate_at("salar" = function(x) ifelse(is.na(salar), "-", x))
data %>% mutate(x = "") %>% mutate_at("salar", function(x) ifelse(is.na(x), "-", x))
data %>% mutate(x = "") %>% mutate_at("salar", function(x) ifelse(is.na(x), "-", x))
data %>% mutate(x = "") %>% mutate_at("salar", function(x) ifelse(is.na(x), "-", x)) %>%
select(x, salar) %>%
count(salar, x) %>%
ggplot(aes(x = x, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "purple", "R$2000,00~R$4000,00" = "blue",
"R$4000,00~R$6000,00" = "green", ">R$6000,00" = "yellow", NA = "red")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>% mutate(x = "") %>% mutate_at("salar", function(x) ifelse(is.na(x), "-", x)) %>%
select(x, salar) %>%
count(salar, x) %>%
ggplot(aes(x = x, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "purple", "R$2000,00~R$4000,00" = "blue",
"R$4000,00~R$6000,00" = "green", ">R$6000,00" = "yellow", "-" = "red")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>% count(apres)
data %>% count(fxa_et) %>%
jh
data %>% count(fxa_et)
data %>% filter(fxa_et == "26~35") %>% select(fxa_et)
data %>% count(fxa_et) %>%
ggplot(mapping = aes(fxa_et = n))+
geom_histogram(col = 6, fill = "blue", alpha = 0.3)+
geom_rug(col = 2, alpha = 0.5)
data %>% count(fxa_et) %>%
ggplot(mapping = aes(n = fxa_et))+
geom_histogram(col = 6, fill = "blue", alpha = 0.3)+
geom_rug(col = 2, alpha = 0.5)
data %>%
ggplot(aes(fxa_et))+
geom_histogram()
data %>%
ggplot(aes(fxa_et))+
geom_histogram(stat = "count")
data %>%
ggplot(aes(fxa_et))+
geom_histogram(stat = "count", col = 6, fill = "blue", alpha = 0.3)+
geom_rug(col = 3, alpha = 0.5)
data %>%
ggplot(aes(fxa_et))+
geom_histogram(stat = "count", col = 6, fill = "blue", alpha = 0.3)+
geom_rug(col = 3, alpha = 0.5)+
xlab("Idade") +
ylab("Frequência") +
ggtitle("Idade dos Intrevistados") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(tidy = FALSE, cache.extra = packageVersion('tufte'), fig.pos= "h")
options(knitr.kable.NA = '')
library(tidyverse)
library(drc)
library(utils)
library(kableExtra)
library(combinat)
library(tinytex)
library(MASS)
library(gridExtra)
cont <- read.csv2("base_continua.csv", header = TRUE, sep = ";", dec = ",")
## Análise exploratória
# Tabela
T_1_exp_cont <- kableExtra::kable(head(cont), align = 'ccc', booktabs = TRUE,
caption = "Primeiras linhas da Base Contínua") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
# dose na escala normal
graf_cont_nor <- ggplot(cont, aes(x = I(Dose), y = Resposta)) + geom_point(aes(colour = Grupo)) + facet_grid(~Grupo)
# dose na escala logaritmica
graf_cont_log <- ggplot(cont, aes(x = I(log(Dose)), y = Resposta)) + geom_point(aes(colour = Grupo)) + facet_grid(~Grupo)
## Ajustando Modelos
### Modelo log-logístico de três parâmetros.
ll_3 <- drm(Resposta ~ Dose, curveid = Grupo, data = cont, fct = LL.3())
### Modelo log-logístico de quatro parâmetros.
ll_4 <- drm(Resposta ~ Dose, curveid = Grupo, data = cont, fct = LL.4())
### Modelo log-logístico de cinco parâmetros.
ll_5 <- drm(Resposta ~ Dose, curveid = Grupo, data = cont, fct = LL.5())
### Modelo log-normal de três parâmetros.
ln_3 <- drm(Resposta ~ Dose, curveid = Grupo, data = cont, fct = LN.3())
### Modelo log-normal de quatro parâmetros.
ln_4 <- drm(Resposta ~ Dose, curveid = Grupo, data = cont, fct = LN.4())
### Modelo Weibull de três parâmetros.
wbl_3 <- drm(Resposta ~ Dose, curveid = Grupo, data = cont, fct = W1.3())
### Modelo Weibull de quatro parâmetros.
wbl_4 <- drm(Resposta ~ Dose, curveid = Grupo, data = cont, fct = W1.4())
### Comparação dos modelos
AIC_cont <- AIC(ll_3, ll_4, ll_5, ln_3, ln_4, wbl_3, wbl_4) %>%
mutate(Modelo = c("Log-logśtico(3 par.)", "Log-logístico(4 par.)", "Log-logístico(5 par.)",
"Log-normal(3 par.)", "Log-normal(4 par.)", "Weibull(3 par.)",
"Weibull(4 par.)")) %>%
dplyr::select(Modelo, AIC) %>%
arrange(AIC)
T_2_M_cont <- kableExtra::kable(AIC_cont, align = 'cc', booktabs = TRUE,
caption = "Modelos Candidatos") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
## Investigando parâmetros
wbl_4_b <- drm(Resposta ~ Dose, curveid = Grupo, data = cont,
pmodels = data.frame(b = 1, c = Grupo, d = Grupo, e = Grupo),
fct = W1.4())
anov_cont <- (anova(wbl_4, wbl_4_b)) %>%
mutate(Modelo = c("Weibull(`b` igual)", "Weibull")) %>%
dplyr::select(Modelo, 1:5)
T_3_anov1 <- kableExtra::kable(anov_cont, align = 'lccccc', booktabs = TRUE,
caption = "Comparação dos Modelos") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
wbl_4_bd <- drm(Resposta ~ Dose, curveid = Grupo, data = cont,
pmodels = data.frame(b = 1, c = Grupo, d = 1, e = Grupo),
fct = W1.4())
anov_cont2 <- anova(wbl_4_b, wbl_4_bd) %>%
mutate(Modelo = c("Weibull(`d` igual)", "Weibull(`b` igual)")) %>%
dplyr::select(Modelo, 1:5)
T_4_anov2 <- kableExtra::kable(anov_cont2, align = 'lccccc', booktabs = TRUE,
caption = "Comparação dos Modelos") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
## Tabela do modelo ajustado
wbl_4_bs <- summary(wbl_4_b)
coe <- wbl_4_b$coefficients
tbl_cont <- data.frame(confint(wbl_4_b)) %>%
mutate(LI = round(X2.5.., digits = 3),
LS = round(X97.5.., digits = 3),
Coeficientes = round(coe, digits = 3),
`Erro Padrão` = round(wbl_4_bs$coefficients[,2], digits = 3),
`Parâmetros` = c("b:(Intercept)", "c:a", "c:b", "d:a", "d:b", "e:a", "e:b")) %>%
dplyr::select(`Parâmetros`, LI, Coeficientes, LS, `Erro Padrão`)
T_5_summary <- kableExtra::kable(tbl_cont, align = 'lcccc', booktabs = TRUE,
caption = "Modelo Weibull de Quatro Parâmetros") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
## teste de falta de ajuste
ajust_cont <- modelFit(wbl_4)
T_aj_cont <- kableExtra::kable(ajust_cont, align = 'lcccc', booktabs = TRUE,
caption = "Teste de Falta de Ajuste") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
## Predição
data_predict <- data.frame(Dose = c(5, 12, 18))
pred_cont <- predict(wbl_4_b, newdata = data_predict, type = 'response', se.fit = FALSE)
predicao_cont <- tibble(data_predict$Dose, pred_cont) %>%
mutate(Dose = data_predict$Dose,
`Resp. Predita` = round(pred_cont, digits = 3)) %>%
dplyr::select(Dose, `Resp. Predita`)
T_6_pred_cont <- kableExtra::kable(predicao_cont, align = 'cc', booktabs = TRUE,
caption = "Predição") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
## estimar dose efetiva
dose_efec_cont <- ED(wbl_4_b, c(25, 50, 75), interval = "delta")
Estimate_cont <- dose_efec_cont[,1]
EP_cont <- dose_efec_cont[,2]
ICs_cont <- data.frame(LI = round(Estimate -1.96 * EP_cont, digits = 3),
Estimativa = round(Estimate_cont, digits = 3),
LS = round(Estimate +1.96 * EP_cont, digits = 3))
Estimate_cont <- dose_efec_cont[,1]
EP_cont <- dose_efec_cont[,2]
ICs_cont <- data.frame(LI = round(Estimate -1.96 * EP_cont, digits = 3),
Estimativa = round(Estimate_cont, digits = 3),
LS = round(Estimate +1.96 * EP_cont, digits = 3))
modelFit(wbl_4)
grid.arrange(graf_cont_nor, graf_cont_log, ncol = 2, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
x <- c(1,2,3,4,5,6,7,8)
y <- c(-1,-2,-3,4,-5,6,7,-8)
dados <- data.frame(var1 = x, var2 = y)
mvar1 <- mean(dados$var1)
mvar2 <- mean(dados$var2)
teste <- function(x){
if(x > 0){
out <- "tem média maior que zero"
}
else{
out <- "tem média menor que zero"
}
return(out)
}
tab <- kableExtra::kable(dados, format = "markdown")
kableExtra::kable(dados, format = "markdown")
plot(y ~ x)
library(tidyverse)
library(kableExtra)
library(readxl)
library(gridExtra)
library(corrplot)
library(MASS)
library(hnp)
library(car)
library(statmod)
## Bases
munic <- read.csv2("municipios", sep = ";", header = TRUE) %>%
mutate(`Município` = str_sub(`Município`, start = 8))
munic <- munic[-c(74, dim(munic)[1]),]
munic <- munic %>% select(`Município`)
MR1 <- read.csv2("base_MR1", sep = ";", header = TRUE) %>%
mutate(`Município` = str_sub(`Município`, start = 8),
`Macrorregião` = 1)
MR2 <- read.csv2("base_MR2", sep = ";", header = TRUE) %>%
mutate(`Município` = str_sub(`Município`, start = 8),
`Macrorregião` = 2)
MR3 <- read.csv2("base_MR3", sep = ";", header = TRUE) %>%
mutate(`Município` = str_sub(`Município`, start = 8),
`Macrorregião` = 3)
MR3$`Óbitos.p.Ocorrênc`[22] <- MR3$`Óbitos.p.Ocorrênc`[22] + MR3$`Óbitos.p.Ocorrênc`[13]
MR3 <- MR3[-13,]
MR4 <- read.csv2("base_MR4", sep = ";", header = TRUE) %>%
mutate(`Município` = str_sub(`Município`, start = 8),
`Macrorregião` = 4)
veic <- read_xlsx("base_veic.xlsx", sheet = "TODOS") %>%
dplyr::select(`Município`, n_veiculos)
veic$`Município`[102] <- "Eldorado do Carajás"
pop <- read_xlsx("base_pop.xlsx")
pop$Espacialidades[47] <- "Eldorado do Carajás"
pop$Espacialidades[108] <- "Santa Izabel do Pará"
pop <- pop %>%
rename("Município" = Espacialidades, "pop_urb" = `População urbana 2010`,
"pop_total" = `População total 2010`, "per_capta" = `Renda per capita 2010`) %>%
mutate(pop_urb = round(pop_urb/pop_total, digits = 2))
mr1 <- c("Afuá", "Anajás", "Bagre", "Chaves", "Curralinho", "Gurupá", "Melgaço", "Santa Cruz do Arari", "Porto de Moz")
mr2 <- c("Colares", "Quatipuru", "Maracanã")
mr3 <- c("Faro")
mr4 <- c("Bannach", "Brejo Grande do Araguaia", "Palestina do Pará")
MR <- MR1 %>%
bind_rows(MR2) %>%
bind_rows(MR3) %>%
bind_rows(MR4)
base <- munic %>%
left_join(MR) %>%
left_join(veic) %>%
left_join(pop) %>%
rename("Fatalidades" = `Óbitos.p.Ocorrênc`) %>%
mutate(Fatalidades = ifelse(is.na(Fatalidades), 0, Fatalidades),
`Macrorregião` = ifelse(`Município` %in% mr1, 1,
ifelse(`Município` %in% mr2, 2,
ifelse(`Município` %in% mr3, 3,
ifelse(`Município` %in% mr4, 4, `Macrorregião`)))))#,
# `Macrorregião` = factor(`Macrorregião`, levels = c(1, 2, 3, 4)))
## Descritiva
summary(base)
tabela1 <- head(base, n = 10)
T_1 <- kableExtra::kable(tabela1, align = 'lcccccc', booktabs = TRUE) %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
## Box-Plots
library(tidyverse)
library(kableExtra)
library(readxl)
library(gridExtra)
library(corrplot)
library(MASS)
library(hnp)
library(car)
library(statmod)
## Bases
munic <- read.csv2("municipios", sep = ";", header = TRUE) %>%
mutate(`Município` = str_sub(`Município`, start = 8))
setwd("~/2019-2/GLM/Trablho2")
## Bases
munic <- read.csv2("municipios", sep = ";", header = TRUE) %>%
mutate(`Município` = str_sub(`Município`, start = 8))
munic <- munic[-c(74, dim(munic)[1]),]
munic <- munic %>% select(`Município`)
## Bases
munic <- read.csv2("municipios", sep = ";", header = TRUE) %>%
mutate(`Município` = str_sub(`Município`, start = 8))
munic <- munic[-c(74, dim(munic)[1]),]
munic <- munic %>% dplyr::select(`Município`)
MR1 <- read.csv2("base_MR1", sep = ";", header = TRUE) %>%
mutate(`Município` = str_sub(`Município`, start = 8),
`Macrorregião` = 1)
MR2 <- read.csv2("base_MR2", sep = ";", header = TRUE) %>%
mutate(`Município` = str_sub(`Município`, start = 8),
`Macrorregião` = 2)
MR3 <- read.csv2("base_MR3", sep = ";", header = TRUE) %>%
mutate(`Município` = str_sub(`Município`, start = 8),
`Macrorregião` = 3)
MR3$`Óbitos.p.Ocorrênc`[22] <- MR3$`Óbitos.p.Ocorrênc`[22] + MR3$`Óbitos.p.Ocorrênc`[13]
MR3 <- MR3[-13,]
MR4 <- read.csv2("base_MR4", sep = ";", header = TRUE) %>%
mutate(`Município` = str_sub(`Município`, start = 8),
`Macrorregião` = 4)
veic <- read_xlsx("base_veic.xlsx", sheet = "TODOS") %>%
dplyr::select(`Município`, n_veiculos)
veic$`Município`[102] <- "Eldorado do Carajás"
pop <- read_xlsx("base_pop.xlsx")
pop$Espacialidades[47] <- "Eldorado do Carajás"
pop$Espacialidades[108] <- "Santa Izabel do Pará"
pop <- pop %>%
rename("Município" = Espacialidades, "pop_urb" = `População urbana 2010`,
"pop_total" = `População total 2010`, "per_capta" = `Renda per capita 2010`) %>%
mutate(pop_urb = round(pop_urb/pop_total, digits = 2))
mr1 <- c("Afuá", "Anajás", "Bagre", "Chaves", "Curralinho", "Gurupá", "Melgaço", "Santa Cruz do Arari", "Porto de Moz")
mr2 <- c("Colares", "Quatipuru", "Maracanã")
mr3 <- c("Faro")
mr4 <- c("Bannach", "Brejo Grande do Araguaia", "Palestina do Pará")
MR <- MR1 %>%
bind_rows(MR2) %>%
bind_rows(MR3) %>%
bind_rows(MR4)
base <- munic %>%
left_join(MR) %>%
left_join(veic) %>%
left_join(pop) %>%
rename("Fatalidades" = `Óbitos.p.Ocorrênc`) %>%
mutate(Fatalidades = ifelse(is.na(Fatalidades), 0, Fatalidades),
`Macrorregião` = ifelse(`Município` %in% mr1, 1,
ifelse(`Município` %in% mr2, 2,
ifelse(`Município` %in% mr3, 3,
ifelse(`Município` %in% mr4, 4, `Macrorregião`)))))#,
## Descritiva
summary(base)
tabela1 <- head(base, n = 10)
T_1 <- kableExtra::kable(tabela1, align = 'lcccccc', booktabs = TRUE) %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
## Box-Plots
par(mfrow=c(2,3))
for (i in 2:ncol(base)) {
boxplot(base[,i],
xlab = '',
ylab = '',
main = names(base[i]),
las=1,
col = '#C8F9F3')
}
par(mfrow = c(1,1))
g1 <- ggplot(base, aes(x=Fatalidades)) + geom_histogram()+ xlab('Fatalidades')+ ylab('')
g2 <- ggplot(base, aes(x=`Macrorregião`)) + geom_histogram()+ xlab('Macrorregião')+ ylab('')
g3 <- ggplot(base, aes(x=n_veiculos)) + geom_histogram()+ xlab('Frota de Veículos')+ ylab('')
g4 <- ggplot(base, aes(x=pop_total)) + geom_histogram()+ xlab('Popupalação')+ ylab('')
g5 <- ggplot(base, aes(x=pop_urb)) + geom_histogram()+ xlab('Taxa de População Urbana')+ ylab('')
g6 <- ggplot(base, aes(x=per_capta)) + geom_histogram()+ xlab('Renda Per Capta')+ ylab('')
grid.arrange(g1, g2, g3, g4, g5, g6, nrow=2, ncol=3)
### Transformando variáveis explicativas
base$log_n_veiculos <- log(base$n_veiculos)
base$log_pop_total  <- log(base$pop_total)
base$log_per_capta <- log(base$per_capta)
par(mfrow = c(1,3))
hist(base$log_n_veiculos, main = 'log(Frota)', xlab = '', ylab = '', col = '#F3EBAB')
hist(base$log_pop_total, main = 'log(População)', xlab = '', ylab = '', col = '#F3EBAB')
hist(base$log_per_capta, main = 'log(Renda Per Capta)', xlab = '', ylab = '', col = '#F3EBAB')
## Correlação
par(mfrow = c(1,1))
cor <- cor(base[ , c(2,3,6,8,9,10)], use = "na.or.complete")
corrplot.mixed(cor, upper = "ellipse")
## Correlação
par(mfrow = c(1,1))
corrplot.mixed(cor, upper = "ellipse")
plot(base[ , c(2,3,6,8,9,10)] ,
pch=20 ,
cex=1.5 ,
col=rgb(0.5, 0.8, 0.9, 0.7))
m1 <- glm(Fatalidades ~ `Macrorregião` + log_n_veiculos + log_pop_total + pop_urb + log_per_capta,
data = base, family = 'poisson')
m2 <- glm.nb(Fatalidades ~ `Macrorregião` + log_n_veiculos + log_pop_total + pop_urb + log_per_capta,
data = base)
ajuste = c('Poisson', 'Binomial Negativa')
aic    = c(AIC(m1), AIC(m2))
verossimilhança = c(logLik(m1),logLik(m2))
df <- data.frame(ajuste, aic, verossimilhança)
df
T_2 <- kableExtra::kable(df, align = 'lcc', booktabs = TRUE) %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
T_2
## Gráficos de envelopes simulados
par(mfrow = c(1,2))
hnp(m1, xlab = 'Percentil da N(0,1)',
ylab = 'Resíduos',
main = 'Poisson')
hnp(m2, xlab = 'Percentil da N(0,1)',
ylab = 'Resíduos',
main = 'Binomial Negativa')
## Gráficos de envelopes simulados
par(mfrow = c(1,2))
hnp(m1, xlab = 'Percentil da N(0,1)',
ylab = 'Resíduos',
main = 'Poisson')
hnp(m2, xlab = 'Percentil da N(0,1)',
ylab = 'Resíduos',
main = 'Binomial Negativa')
summary(m2)
m2.1 <- step(m2, direction = "both")
## Resumo do novo modelo
summary(m2.1)
## Resumo do novo modelo
summary(m2.1)$coefficients
coefic <- data.frame(summary(m2.1)$coefficients)
linha <- rownames(coefic)
coefic <- coefic %>%
rename(Estimativa = Estimate, `Erro Padrão` = Std..Error) %>%
mutate_at(c("Estimativa", "Erro Padrão"), function(x) round(x, digits = 3)) %>%
dplyr::select(-c(z.value, Pr...z..))
rownames(coefic) <- linha
T_3 <- kableExtra::kable(coefic, align = 'cc', booktabs = TRUE) %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
T_3
anova(m2, m2.1)
anv <- anova(m2, m2.1)
anv$Model
anv$theta
anv$`   df`
anv$`   2 x log-lik.`
anv$`Pr(Chi)`
data.frame(Modelo = c("Binomial Negativa(Restrito)", "Binomial Negativa(Saturado)"),
Theta = anv$theta, `GL Residual` = anv$`Resid. df`, `Verossimilhança` = anv$`   2 x log-lik.`,
`Estatística de teste` = anv$`Pr(Chi)`)
data.frame(Modelo = c("Binomial Negativa(Restrito)", "Binomial Negativa(Saturado)"),
Theta = anv$theta, `GL Residual` = anv$`Resid. df`, `Verossimilhança` = anv$`   2 x log-lik.`,
`Estatística de teste` = anv$`Pr(Chi)`) %>%
mutate(`Estatística de teste` = ifelse(is.na(`Estatística de teste`), "", `Estatística de teste`))
tibble(Modelo = c("Binomial Negativa(Restrito)", "Binomial Negativa(Saturado)"),
Theta = anv$theta, `GL Residual` = anv$`Resid. df`, `Verossimilhança` = anv$`   2 x log-lik.`,
`Estatística de teste` = anv$`Pr(Chi)`) %>%
mutate(`Estatística de teste` = ifelse(is.na(`Estatística de teste`), "", `Estatística de teste`))
a_nova <-tibble(Modelo = c("Binomial Negativa(Restrito)", "Binomial Negativa(Saturado)"),
Theta = anv$theta, `GL Residual` = anv$`Resid. df`, `Verossimilhança` = anv$`   2 x log-lik.`,
`Estatística de teste` = anv$`Pr(Chi)`) %>%
mutate(`Estatística de teste` = ifelse(is.na(`Estatística de teste`), "", round(`Estatística de teste`, digits = 3)))
T_4 <- kableExtra::kable(a_nova, align = 'lcccc', booktabs = TRUE) %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
T_4
a_nova <-tibble(Modelo = c("Binomial Negativa(Restrito)", "Binomial Negativa(Saturado)"),
Theta = round(anv$theta, digits = 4), `GL Residual` = anv$`Resid. df`,
`Verossimilhança` = anv$`   2 x log-lik.`, `Estatística de teste` = anv$`Pr(Chi)`) %>%
mutate(`Estatística de teste` = ifelse(is.na(`Estatística de teste`), "", round(`Estatística de teste`, digits = 4)))
T_4 <- kableExtra::kable(a_nova, align = 'lcccc', booktabs = TRUE) %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
T_4
par(mfrow=c(1,1))
influenceIndexPlot(m2.1, vars=c("Cook", "Studentized", "hat"), main="Medidas de Influência")
par(mfrow=c(1,2))
res <- qresiduals(m2.1)
plot(res)
residuos <- qresiduals(m2.1)
qqnorm(residuos)
qqline(residuos, col = 2)
plot(allEffects(m2.1), type = 'response', main = '')
library(effects)
plot(allEffects(m2.1), type = 'response', main = '')
perfis <- data.frame(log_n_veiculos =  c(12.5, 7, 4),
pop_urb =  c(0.5,  0.1,  0.9))
perfis
perfis <- data.frame(`Número de Veículos(log)` =  c(12.5, 7, 4),
`Taxa de População Urbana` =  c(0.5,  0.1,  0.9))
rownames(perfis) <- c("Perfil 1", "Perfil 2", "Perfil 3")
View(perfis)
T_5 <- kableExtra::kable(perfis, align = 'cc', booktabs = TRUE) %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
T_5
colnames(perfis) <- c("Número de Veículos(log)", "Taxa de População Urbana")
T_5 <- kableExtra::kable(perfis, align = 'cc', booktabs = TRUE) %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
T_5
colnames(perfis) <- c("Número de Veículos (log)", "Taxa de População Urbana")
T_5 <- kableExtra::kable(perfis, align = 'cc', booktabs = TRUE) %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
T_5
floor(predict(m2.1, interval = 'prediction', newdata = perfis, type = 'response'))
View(base)
perfis <- data.frame(log_n_veiculos =  c(12.5, 7, 4),
pop_urb =  c(0.5,  0.1,  0.9))
pred <- floor(predict(m2.1, interval = 'prediction', newdata = perfis, type = 'response'))
perfis$Predi <- pred
rownames(perfis) <- c("Perfil 1", "Perfil 2", "Perfil 3")
colnames(perfis) <- c("Número de Veículos (log)", "Taxa de População Urbana", "Predição")
T_5 <- kableExtra::kable(perfis, align = 'cc', booktabs = TRUE) %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
T_5 <- kableExtra::kable(perfis, align = 'ccc', booktabs = TRUE) %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
T_5
