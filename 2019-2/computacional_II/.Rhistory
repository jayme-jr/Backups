y <- ifelse(is.integer(x))
y <- ifelse(is.integer(x), x, NA)
y <- ifelse(!is.integer(x/2), x, NA)
!is.integer(x/2)
for(i in 1:100){
if(!is.integer(x[i]/2)){y <- y + x[i]}}
n <- 1
for(i in 1:100){
if(!is.integer(x[i]/2)){y[n] <- x[i]
n <-  +1}}
for(i in 1:100){
if(!is.integer(x[i]/2)){y[n] <- x[i]
n <- n+1}}
x[1]/2
is.integer(x[1/2])
x <- seq(1:100, by = 2)
x <- seq.int(1:100, by = 2)
x <- seq.int(1, 100, by = 2)
x <- seq.int(1, 100, by = 2); sum(x)
x <- seq.int(1, 100, by = 2); sum(x^2)
x^2
x <- c(1, 2, 3) + 10
y <- 1:6 + 5
x + y
c(1, 2, 3) * c(3, 4, 5, 6)
x <- c(1, 2, 3); y <- c(3, 4, 5, 6); x*y
x <- seq(0, e^4, length.out = 100)
exp(1)
x <- seq(0, exp(4), length.out = 100)
x <- seq(0, exp(4), length.out = 100); sum(x)
x <- seq(0, exp(4), length.out = 100); round(sum(x), digits = 0)
x <- seq(1:100); sum(x^2)
y <- x^2
x <- seq(1:100); y <- x^2; sum(y)
x <- seq(0, exp(4), length.out = 100); round(sum(x), digits = 0)
x <- c(1, 2, 3); y <- c(3, 4, 5, 6); y*x
shift <- function(x, ...) {
a <- min(x, ...)
b <- max(x, ...) - a
res <- (x - a)/b
return(res)
}
args(shift)
args(min)
n <- 1
usage(min)
args(min)
args(shift)
x <- c(1,2,3,NA)
shift(x, na.rm = TRUE)
shift(c(9, 3, NA, 6))
shift(12)
methods(shift)
methods(max)
methods(plot)
methods(max)
max(12)
max(c(12,13))
max(c(12,13)*1i)
shift(c(-1,-2))
max(c(-1,-2))
shift(c(1,2))
shift(c(1,2)*1i)
shift(c(-1,-2, NA))
shift(c(-1,-2, NA), na.rem = TRUE)
shift(c(-1,-2, NA), na.rm = TRUE)
shift(1)
shift(12)
shift(c(2, 3, 6))
m <- matrix(1:12, ncol = 3, byrow = TRUE)
View(m)
A <- matrix(1:12, ncol = 3, byrow = TRUE)
set.seed(123)
x <- runif(16,0,1)
B <- matrix(x, ncol = 4, byrow = FALSE)
View(B)
typof(c(10L,20L,300L))
typeof(c(10L,20L,300L))
x <- seq.int(1, 100, by = 2); sum(x^2)
y <- 1:6 + 5
x <- c(1, 2, 3) + 10; y <- 1:6 + 5; x + y
x <- c(1, 2, 3); y <- c(3, 4, 5, 6); x*y
x <- seq(0, exp(4), length.out = 100); round(sum(x), digits = 0)
x <- seq(1:100); sum(x^2)
shift(c(2, 3, 6))
shift(12)
C <- c(10,20,30,40)
t(C) %*% A
sum(B %*% A)
round(sum(B %*% A), digits = 3)
A * C; A %*% C
round(sum(x), digits = 3)
A %*% B
A * C; A %*% t(C)
B %*% C
sum(A)
sum(B)
round(sum(B), digits = 3)
x
x <- runif(16,0,1)
sum(x)
View(oldpar)
# Pacotes ---------------------
library(tidyverse)
library(lubridate)
library(plotly)
## dados +
data <- read.csv2("/home/jaymejr/PET/datathon_EP/Tabulacao_feira - Página1.csv", sep = ",")
names <- c("gen", "fxa_et", "x_fc", "c_sup", "form", "stand", "vest", "curso", "ouviu",
"apres", "salar", "vc_c", "c_pq", "nc_pq")
names(data) <- names
data <- data %>%
mutate(gen = ifelse(gen == 0, "masc", "fem"),
fxa_et = ifelse(fxa_et == 1, "<18",
ifelse(fxa_et == 2, "18~25",
ifelse(fxa_et == 3, "26~35", ">35"))),
x_fc = ifelse(x_fc == 1, "1ª",
ifelse(x_fc == 2, "1",
ifelse(x_fc == 3, "2", "3+"))),
c_sup = ifelse(c_sup == 0, "não", "sim"),
form = ifelse(form == 1, "pública",
ifelse(form == 2, "privada",
ifelse(form == 3, "ambos", NA))),
stand = ifelse(stand == 0, "não",
ifelse(stand == 1, "sim", NA)),
vest = ifelse(vest == 0, "não", "sim"),
curso = ifelse(curso == 0, "não", "sim"),
ouviu = ifelse(ouviu == 0, "não", "sim"),
apres = ifelse(apres == 1, "amigos|parentes",
ifelse(apres == 2, "internet",
ifelse(apres == 3, "escola",
ifelse(apres == 4, "universidade",
ifelse(apres == 5, "feira cp", "outro"))))),
salar = ifelse(salar == 1, "<R$2000,00",
ifelse(salar == 2, "R$2000,00~R$4000,00",
ifelse(salar == 3, "R$4000,00~R$6000,00", ">R$6000,00"))),
vc_c = ifelse(vc_c == 0, "não",
ifelse(vc_c == 1, "sim", "não sei")),
c_pq = ifelse(c_pq == 1, "int. exatas",
ifelse(c_pq == 2, "variedade mt",
ifelse(c_pq == 3, "salário", "baixa concorrência"))),
nc_pq = ifelse(nc_pq == 1, "des. exatas",
ifelse(nc_pq == 2, "desc. curso",
ifelse(nc_pq == 3, "outro curso", "falta uni c.curso"))))
## gráficos -----------------------
gp <- ggplotly(data %>%
count(gen, salar) %>%
ggplot(aes(x = salar, y = n, fill = gen)) +
geom_bar(stat = "identity", position = "stack") +
geom_text(aes(label = n), position = position_stack(vjust = .5), size = 5) +
guides(fill = guide_legend( title.position = "top", title.hjust = 0.5)) +
theme(axis.text.x = element_text(angle = 30, hjust = 1), legend.position="bottom") +
ylab("") +
xlab("") +
scale_fill_manual(values = c("masc" = "pink",
"fem" = "blue")) +
ggtitle("Salário Imaginado")) %>%
layout(legend = list(orientation = "h", x = 0.4, y = -0.2))
gp
data %>%
count(salar) %>%
ggplot(aes(x = n, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "blue", "R$2000,00~R$4000,00" = "pink"),
"R$2000,00~R$4000,00" = "black", ">R$6000,00" = "blue") +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>%
count(salar) %>%
ggplot(aes(x = n, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "blue", "R$2000,00~R$4000,00" = "pink",
"R$2000,00~R$4000,00" = "black", ">R$6000,00" = "blue")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>%
count(salar) %>%
ggplot(aes(, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "blue", "R$2000,00~R$4000,00" = "pink",
"R$2000,00~R$4000,00" = "black", ">R$6000,00" = "blue")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>%
count(salar) %>%
ggplot(aes(x = salar, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "blue", "R$2000,00~R$4000,00" = "pink",
"R$2000,00~R$4000,00" = "black", ">R$6000,00" = "blue")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>% mutate(x = "") %>%
select(x, salar) %>%
count(salar) %>%
ggplot(aes(x = x, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "blue", "R$2000,00~R$4000,00" = "pink",
"R$2000,00~R$4000,00" = "black", ">R$6000,00" = "blue")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
mutate(x = "") %>%
select(x, salar) %>%
count(salar)
data %>% mutate(x = "") %>%
select(x, salar) %>%
count(salar)
data %>% mutate(x = "") %>%
select(x, salar) %>%
count(salar, x)
data %>% mutate(x = "") %>%
select(x, salar) %>%
count(salar, x) %>%
ggplot(aes(x = x, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "blue", "R$2000,00~R$4000,00" = "pink",
"R$2000,00~R$4000,00" = "black", ">R$6000,00" = "blue")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>% mutate(x = "") %>%
select(x, salar) %>%
count(salar, x) %>%
ggplot(aes(x = x, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "purple", "R$2000,00~R$4000,00" = "blue",
"R$2000,00~R$4000,00" = "green", ">R$6000,00" = "yellow", NA = "red")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>% mutate(x = "") %>%
select(x, salar) %>%
count(salar, x) %>%
ggplot(aes(x = x, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "purple", "R$2000,00~R$4000,00" = "blue",
"R$2000,00~R$4000,00" = "green", ">R$6000,00" = "yellow")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>% mutate(x = "") %>%
select(x, salar) %>%
count(salar, x) %>%
ggplot(aes(x = x, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "purple", "R$2000,00~R$4000,00" = "blue",
"R$4000,00~R$6000,00" = "green", ">R$6000,00" = "yellow")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>% mutate(x = "") %>%
select(x, salar) %>%
count(salar, x) %>%
ggplot(aes(x = x, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "purple", "R$2000,00~R$4000,00" = "blue",
"R$4000,00~R$6000,00" = "green", ">R$6000,00" = "yellow", NA = "red")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>% mutate(x = "") %>% mutate_at("salar" = function(x) ifelse(is.na(salar), "-", x))
data %>% mutate(x = "") %>% mutate_at("salar", function(x) ifelse(is.na(x), "-", x))
data %>% mutate(x = "") %>% mutate_at("salar", function(x) ifelse(is.na(x), "-", x))
data %>% mutate(x = "") %>% mutate_at("salar", function(x) ifelse(is.na(x), "-", x)) %>%
select(x, salar) %>%
count(salar, x) %>%
ggplot(aes(x = x, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "purple", "R$2000,00~R$4000,00" = "blue",
"R$4000,00~R$6000,00" = "green", ">R$6000,00" = "yellow", NA = "red")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>% mutate(x = "") %>% mutate_at("salar", function(x) ifelse(is.na(x), "-", x)) %>%
select(x, salar) %>%
count(salar, x) %>%
ggplot(aes(x = x, y = n, fill = salar
# , text = paste0((n/sum(n))*100, " = ",
#                                             n, "do total de EICPS confirmados")
)) +
geom_bar(position = "fill", stat = "identity") +
geom_text(aes(label = paste0(n, " = ", round((n/sum(n))*100, digits = 2), "%")),
position = position_fill(vjust = 0.5), size = 5) +
ylab("%") +
xlab("") +
scale_fill_manual(values = c("<R$2000,00" = "purple", "R$2000,00~R$4000,00" = "blue",
"R$4000,00~R$6000,00" = "green", ">R$6000,00" = "yellow", "-" = "red")) +
ggtitle("Salário Imaginado") +
labs(fill = "") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
data %>% count(apres)
data %>% count(fxa_et) %>%
jh
data %>% count(fxa_et)
data %>% filter(fxa_et == "26~35") %>% select(fxa_et)
data %>% count(fxa_et) %>%
ggplot(mapping = aes(fxa_et = n))+
geom_histogram(col = 6, fill = "blue", alpha = 0.3)+
geom_rug(col = 2, alpha = 0.5)
data %>% count(fxa_et) %>%
ggplot(mapping = aes(n = fxa_et))+
geom_histogram(col = 6, fill = "blue", alpha = 0.3)+
geom_rug(col = 2, alpha = 0.5)
data %>%
ggplot(aes(fxa_et))+
geom_histogram()
data %>%
ggplot(aes(fxa_et))+
geom_histogram(stat = "count")
data %>%
ggplot(aes(fxa_et))+
geom_histogram(stat = "count", col = 6, fill = "blue", alpha = 0.3)+
geom_rug(col = 3, alpha = 0.5)
data %>%
ggplot(aes(fxa_et))+
geom_histogram(stat = "count", col = 6, fill = "blue", alpha = 0.3)+
geom_rug(col = 3, alpha = 0.5)+
xlab("Idade") +
ylab("Frequência") +
ggtitle("Idade dos Intrevistados") +
theme(plot.title = element_text(hjust = .5, face = "bold", size = 18))
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(tidy = FALSE, cache.extra = packageVersion('tufte'), fig.pos= "h")
options(knitr.kable.NA = '')
library(tidyverse)
library(drc)
library(utils)
library(kableExtra)
library(combinat)
library(tinytex)
library(MASS)
library(gridExtra)
cont <- read.csv2("base_continua.csv", header = TRUE, sep = ";", dec = ",")
## Análise exploratória
# Tabela
T_1_exp_cont <- kableExtra::kable(head(cont), align = 'ccc', booktabs = TRUE,
caption = "Primeiras linhas da Base Contínua") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
# dose na escala normal
graf_cont_nor <- ggplot(cont, aes(x = I(Dose), y = Resposta)) + geom_point(aes(colour = Grupo)) + facet_grid(~Grupo)
# dose na escala logaritmica
graf_cont_log <- ggplot(cont, aes(x = I(log(Dose)), y = Resposta)) + geom_point(aes(colour = Grupo)) + facet_grid(~Grupo)
## Ajustando Modelos
### Modelo log-logístico de três parâmetros.
ll_3 <- drm(Resposta ~ Dose, curveid = Grupo, data = cont, fct = LL.3())
### Modelo log-logístico de quatro parâmetros.
ll_4 <- drm(Resposta ~ Dose, curveid = Grupo, data = cont, fct = LL.4())
### Modelo log-logístico de cinco parâmetros.
ll_5 <- drm(Resposta ~ Dose, curveid = Grupo, data = cont, fct = LL.5())
### Modelo log-normal de três parâmetros.
ln_3 <- drm(Resposta ~ Dose, curveid = Grupo, data = cont, fct = LN.3())
### Modelo log-normal de quatro parâmetros.
ln_4 <- drm(Resposta ~ Dose, curveid = Grupo, data = cont, fct = LN.4())
### Modelo Weibull de três parâmetros.
wbl_3 <- drm(Resposta ~ Dose, curveid = Grupo, data = cont, fct = W1.3())
### Modelo Weibull de quatro parâmetros.
wbl_4 <- drm(Resposta ~ Dose, curveid = Grupo, data = cont, fct = W1.4())
### Comparação dos modelos
AIC_cont <- AIC(ll_3, ll_4, ll_5, ln_3, ln_4, wbl_3, wbl_4) %>%
mutate(Modelo = c("Log-logśtico(3 par.)", "Log-logístico(4 par.)", "Log-logístico(5 par.)",
"Log-normal(3 par.)", "Log-normal(4 par.)", "Weibull(3 par.)",
"Weibull(4 par.)")) %>%
dplyr::select(Modelo, AIC) %>%
arrange(AIC)
T_2_M_cont <- kableExtra::kable(AIC_cont, align = 'cc', booktabs = TRUE,
caption = "Modelos Candidatos") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
## Investigando parâmetros
wbl_4_b <- drm(Resposta ~ Dose, curveid = Grupo, data = cont,
pmodels = data.frame(b = 1, c = Grupo, d = Grupo, e = Grupo),
fct = W1.4())
anov_cont <- (anova(wbl_4, wbl_4_b)) %>%
mutate(Modelo = c("Weibull(`b` igual)", "Weibull")) %>%
dplyr::select(Modelo, 1:5)
T_3_anov1 <- kableExtra::kable(anov_cont, align = 'lccccc', booktabs = TRUE,
caption = "Comparação dos Modelos") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
wbl_4_bd <- drm(Resposta ~ Dose, curveid = Grupo, data = cont,
pmodels = data.frame(b = 1, c = Grupo, d = 1, e = Grupo),
fct = W1.4())
anov_cont2 <- anova(wbl_4_b, wbl_4_bd) %>%
mutate(Modelo = c("Weibull(`d` igual)", "Weibull(`b` igual)")) %>%
dplyr::select(Modelo, 1:5)
T_4_anov2 <- kableExtra::kable(anov_cont2, align = 'lccccc', booktabs = TRUE,
caption = "Comparação dos Modelos") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
## Tabela do modelo ajustado
wbl_4_bs <- summary(wbl_4_b)
coe <- wbl_4_b$coefficients
tbl_cont <- data.frame(confint(wbl_4_b)) %>%
mutate(LI = round(X2.5.., digits = 3),
LS = round(X97.5.., digits = 3),
Coeficientes = round(coe, digits = 3),
`Erro Padrão` = round(wbl_4_bs$coefficients[,2], digits = 3),
`Parâmetros` = c("b:(Intercept)", "c:a", "c:b", "d:a", "d:b", "e:a", "e:b")) %>%
dplyr::select(`Parâmetros`, LI, Coeficientes, LS, `Erro Padrão`)
T_5_summary <- kableExtra::kable(tbl_cont, align = 'lcccc', booktabs = TRUE,
caption = "Modelo Weibull de Quatro Parâmetros") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
## teste de falta de ajuste
ajust_cont <- modelFit(wbl_4)
T_aj_cont <- kableExtra::kable(ajust_cont, align = 'lcccc', booktabs = TRUE,
caption = "Teste de Falta de Ajuste") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
## Predição
data_predict <- data.frame(Dose = c(5, 12, 18))
pred_cont <- predict(wbl_4_b, newdata = data_predict, type = 'response', se.fit = FALSE)
predicao_cont <- tibble(data_predict$Dose, pred_cont) %>%
mutate(Dose = data_predict$Dose,
`Resp. Predita` = round(pred_cont, digits = 3)) %>%
dplyr::select(Dose, `Resp. Predita`)
T_6_pred_cont <- kableExtra::kable(predicao_cont, align = 'cc', booktabs = TRUE,
caption = "Predição") %>%
kableExtra::kable_styling(latex_options = c("striped", "hold_position"))
## estimar dose efetiva
dose_efec_cont <- ED(wbl_4_b, c(25, 50, 75), interval = "delta")
Estimate_cont <- dose_efec_cont[,1]
EP_cont <- dose_efec_cont[,2]
ICs_cont <- data.frame(LI = round(Estimate -1.96 * EP_cont, digits = 3),
Estimativa = round(Estimate_cont, digits = 3),
LS = round(Estimate +1.96 * EP_cont, digits = 3))
Estimate_cont <- dose_efec_cont[,1]
EP_cont <- dose_efec_cont[,2]
ICs_cont <- data.frame(LI = round(Estimate -1.96 * EP_cont, digits = 3),
Estimativa = round(Estimate_cont, digits = 3),
LS = round(Estimate +1.96 * EP_cont, digits = 3))
modelFit(wbl_4)
grid.arrange(graf_cont_nor, graf_cont_log, ncol = 2, nrow = 1)
setwd("~/2019-2/computacional_II")
mean(c(0.8741, 0.9264, 0.9368, 0.9386, 0.9507, 0.9499, 0.9399, 0.4698))
